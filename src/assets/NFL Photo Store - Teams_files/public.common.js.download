/*
** nopCommerce custom js functions
*/



function OpenWindow(query, w, h, scroll) {
    var l = (screen.width - w) / 2;
    var t = (screen.height - h) / 2;

    winprops = 'resizable=0, height=' + h + ',width=' + w + ',top=' + t + ',left=' + l + 'w';
    if (scroll) winprops += ',scrollbars=1';
    var f = window.open(query, "_blank", winprops);
}

function setLocation(url) {
    window.location.href = url;
}

function displayAjaxLoading(display) {
    if (display) {
        $('.ajax-loading-block-window').show();
    }
    else {
        $('.ajax-loading-block-window').hide('slow');
    }
}

function displayPopupNotification(message, messagetype, modal) {
    //types: success, error
    var container;
    if (messagetype == 'success') {
        //success
        container = $('#dialog-notifications-success');
    }
    else if (messagetype == 'error') {
        //error
        container = $('#dialog-notifications-error');
    }
    else {
        //other
        container = $('#dialog-notifications-success');
    }

    //we do not encode displayed message
    var htmlcode = '';
    if ((typeof message) == 'string') {
        htmlcode = '<p>' + message + '</p>';
    } else {
        for (var i = 0; i < message.length; i++) {
            htmlcode = htmlcode + '<p>' + message[i] + '</p>';
        }
    }

    container.html(htmlcode);

    var isModal = (modal ? true : false);
    container.dialog({modal:isModal});
}


var barNotificationTimeout;
function displayBarNotification(message, messagetype, timeout) {
    clearTimeout(barNotificationTimeout);

    //types: success, error
    var cssclass = 'success';
    if (messagetype == 'success') {
        cssclass = 'success';
    }
    else if (messagetype == 'error') {
        cssclass = 'error';
    }
    //remove previous CSS classes and notifications
    $('#bar-notification')
        .removeClass('success')
        .removeClass('error');
    $('#bar-notification .content').remove();

    //we do not encode displayed message

    //add new notifications
    var htmlcode = '';
    if ((typeof message) == 'string') {
        htmlcode = '<p class="content">' + message + '</p>';
    } else {
        for (var i = 0; i < message.length; i++) {
            htmlcode = htmlcode + '<p class="content">' + message[i] + '</p>';
        }
    }
    $('#bar-notification').append(htmlcode)
        .addClass(cssclass)
        .fadeIn('slow')
        .mouseenter(function ()
            {
                clearTimeout(barNotificationTimeout);
            });

    $('#bar-notification .close').unbind('click').click(function () {
        $('#bar-notification').fadeOut('slow');
    });

    //timeout (if set)
    if (timeout > 0) {
        barNotificationTimeout = setTimeout(function () {
            $('#bar-notification').fadeOut('slow');
        }, timeout);
    }
}

function htmlEncode(value) {
    return $('<div/>').text(value).html();
}

function htmlDecode(value) {
    return $('<div/>').html(value).text();
}

function showDialog(id, w, h) {
    $(id).dialog({
        zIndex: 99999,
        modal: true,
        resizable: false,
        width: w,
        height: h
    });
    $('div.ui-widget-overlay').css('width', dialogWidth());
    $('div.ui-widget-overlay').css('height', dialogHeight());
    $('div.ui-widget-overlay').css('z-index', 100000);
    $('button').blur();
}
function closeDialog(id) {
    $(id).dialog("destroy");
}

function dialogHeight() {
    var scrollHeight,
        offsetHeight;
    // handle IE 6
    if ($.browser.msie && $.browser.version < 7) {
        scrollHeight = Math.max(
            document.documentElement.scrollHeight,
            document.body.scrollHeight
        );
        offsetHeight = Math.max(
            document.documentElement.offsetHeight,
            document.body.offsetHeight
        );

        if (scrollHeight < offsetHeight) {
            return $(window).height() + 'px';
        } else {
            return scrollHeight + 'px';
        }
        // handle "good" browsers
    } else {
        return $(document).height() + 'px';
    }
}

function dialogWidth() {
    var scrollWidth,
        offsetWidth;
    // handle IE
    if ( $.browser.msie ) {
        scrollWidth = Math.max(
            document.documentElement.scrollWidth,
            document.body.scrollWidth
        );
        offsetWidth = Math.max(
            document.documentElement.offsetWidth,
            document.body.offsetWidth
        );

        if (scrollWidth < offsetWidth) {
            return $(window).width() + 'px';
        } else {
            return scrollWidth + 'px';
        }
        // handle "good" browsers
    } else {
        return $(document).width() + 'px';
    }
}

//added by lb
function refreshControls(type, prefix, obj) {
    if (obj == null) {
        prefix = prefix.replace('#', '');
        if (type == "span") {
            $('span[id^="' + prefix + '"]').html('');
        } else if (type == 'text') {
            $('input[id^="' + prefix + '"]').val('');
        }
        return;
    }

    for (var p in obj) {
        var v = obj[p];
        if (v == null)
            v = "";
        if ($(prefix + p).length > 0) {
            if (type == "text")
                $(prefix + p).val(v);
            else if (type == "span")
                $(prefix + p).html(v);
        }
    }
}